<?php

/**
 * Implements hook_node_load()
 * 
 * @param type $nodes
 * @param type $types
 */
function node_hooks_node_load($nodes, $types) {
  // Add pig-latin title to all article nodes
  if (in_array('article', $types)) {
    foreach ($nodes as $nid => $node) {
      $nodes[$nid]->node_hooks_title = ucfirst(__node_hooks_translate_to_pig_latin(strtolower($node->title)));
    }
  }
  
  // dpm($nodes);
  // dpm($types);
}

/**
 * Implementation of hook_node_view()
 * 
 * @param type $node
 * @param type $view_mode
 * @param type $langcode
 */
function node_hooks_node_view($node, $view_mode, $langcode) {
  if ($view_mode == 'full' && !empty($node->node_hooks_title)) {
    $node->content['node_hooks'] = array(
      // Do not forget to sanitize $node->node_hools_title which is based on
      // user entered input.
      '#markup' => '<div class="node-hooks"><strong>' . t('Pig Latin Title') . ':</strong> ' . check_plain($node->node_hooks_title) . '</div>',
      '#weight' => 100,
    );
    
    // dpm($node);
  }
}

/**
 * Implementatio of nook_node_validate.
 * 
 * @param type $node
 * @param type $form
 * @param type $form_state
 */
function node_hooks_node_validate($node, $form, &$form_state) {
  // Only works in conjunction with a user form validate.

  // dpm($form_state['values']['title']);
  
  if (strstr(strtolower($form_state['values']['title']), 'fight club')) {
    form_set_error('title', t("The first rule of Fight Club: Don't talk about Fight Club"));
  }
}

/**
 * Implementation of hook_node_submit().
 * 
 * @param type $node
 * @param type $form
 * @param type $form_state
 */
function node_hooks_node_submit($node, $form, &$form_state) {
  // Only works in conjunction with a user form submit.

  if ($node->type == 'article') {
    // @variable Inserted as escaped to HTML
    // %variable Inserted as escaped to HTML and emphasized text.
    // !variable Inserted as is. No changes.
    drupal_set_message(t('Your article entitled %title will be reviewed by an editor soon.', 
      array('%title' => $node->title)));
  }
}

/**
 * Implementation of hook_node_presave().
 * @param type $node
 */
function node_hooks_node_presave($node) {
  $node->body[LANGUAGE_NONE][0]['value'] = str_replace('Voldemort', 'He who must not be named', $node->body[LANGUAGE_NONE][0]['value']);
}

/**
 * Implementation of hook_node_insert().
 * 
 * @param type $node
 */
function node_hooks_node_insert($node) {
  // Entire presaving has been completed.
  if ($node->type == 'article') {
    watchdog('node_hooks', 'Article entitled %title created by !user',
      array(
        '%title' => $node->title, 
        '!user' => l($node->name, 'user/' . $node->uid),
      )
    );
  }
}

/**
 * Implentation of hook_node_update().
 * 
 * @param type $node
 */
function node_hooks_node_update($node) {
  if ($node->type == 'article') {
    watchdog('node_hooks', 'Article entitled %title updated by !user',
      array(
        '%title' => $node->title, 
        '!user' => l($node->name, 'user/' . $node->uid),
      )
    );
  }  
}

/**
 * Implentation of hook_node_delete().
 * 
 * @param type $node
 */
function node_hooks_node_delete($node) {
  // Delete has already been done. Use this to cleanup any additional
  // information.
  if ($node->type == 'article') {
    drupal_set_message(t('Deleted %title. Ouch! that hurts.', array('%title' => $node->title)), 'warning');
  }  
}

/**
 * Translate string to Pig Latin.
 *
 * @param type $string
 * @return type
 */
function __node_hooks_translate_to_pig_latin($string) {
  $words = explode(' ', $string);
  $pig_latin = array();
  $vowels = array('a', 'e', 'i', 'o', 'y');
  
  foreach ($words as $word) {
    if (in_array(strtolower(substr($word, 0, 1)), $vowels)) {
      $pig_latin[] = $word . 'way';
    }
    else {
      $pig_latin[] = substr($word, 1) . substr($word, 0, 1) . 'ay';
    }
  }
  
  return implode(' ',$pig_latin);
}
